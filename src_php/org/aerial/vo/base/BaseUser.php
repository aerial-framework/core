<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $GroupUsers
 * @property Contact $Contact
 * @property Doctrine_Collection $Phonenumbers
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id$
 */
abstract class BaseUser extends Aerial_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));


        $this->setAttribute(Doctrine_Core::ATTR_EXPORT, Doctrine_Core::EXPORT_ALL);
        $this->setAttribute(Doctrine_Core::ATTR_VALIDATE, true);

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Group as Groups', array(
             'refClass' => 'GroupUser',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('GroupUser as GroupUsers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('Contact', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Phonenumber as Phonenumbers', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
    public function construct()
    {
        $this->mapValue('_explicitType', 'org.aerial.vo.User');
    }
}